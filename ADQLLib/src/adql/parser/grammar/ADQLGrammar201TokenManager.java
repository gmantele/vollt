/* ADQLGrammar201TokenManager.java */
/* Generated By:JavaCC: Do not edit this line. ADQLGrammar201TokenManager.java */
package adql.parser.grammar;
/*
 * This file is part of ADQLLibrary.
 * 
 * ADQLLibrary is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * ADQLLibrary is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with ADQLLibrary.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * Copyright 2020-2023 - UDS/Centre de Donn√©es astronomiques de Strasbourg (CDS)
 */

import java.util.Vector;
import java.util.ArrayList;
import adql.parser.ADQLParser.ADQLVersion;
import adql.parser.IdentifierItems;
import adql.parser.IdentifierItems.IdentifierItem;
import adql.parser.ADQLQueryFactory.JoinType;
import adql.db.DBType.DBDatatype;
import adql.query.*;
import adql.query.from.*;
import adql.query.constraint.*;
import adql.query.operand.*;
import adql.query.operand.function.*;
import adql.query.operand.function.cast.*;
import adql.query.operand.function.conditional.*;
import adql.query.operand.function.string.*;
import adql.query.operand.function.geometry.*;
import adql.query.operand.function.geometry.GeometryFunction.GeometryValue;

/** Token Manager. */
@SuppressWarnings ("unused")
public class ADQLGrammar201TokenManager implements ADQLGrammar201Constants {
        protected void CommonTokenAction(final Token t) {
                t.adqlVersion = ADQLGrammar201.VERSION;
        }

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_2(int pos, long active0, long active1){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_2(int pos, long active0, long active1){
   return jjMoveNfa_2(jjStopStringLiteralDfa_2(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_2(){
   switch(curChar)
   {
      case 34:
         return jjStartNfaWithStates_2(0, 113, 1);
      default :
         return jjMoveNfa_2(0, 0);
   }
}
private int jjStartNfaWithStates_2(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_2(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_2(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 3;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffbffffffffL & l) != 0L)
                  {
                     if (kind > 112)
                        kind = 112;
                  }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 1:
                  if (curChar == 34 && kind > 112)
                     kind = 112;
                  break;
               case 2:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  kind = 112;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((jjbitVec0[i2] & l2) != 0L && kind > 112)
                     kind = 112;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 3 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x800000200L) != 0L || (active1 & 0x2000L) != 0L)
         {
            jjmatchedKind = 114;
            return 254;
         }
         if ((active0 & 0x400000000400000L) != 0L || (active1 & 0x808000000L) != 0L)
         {
            jjmatchedKind = 114;
            return 712;
         }
         if ((active0 & 0x400000000800L) != 0L || (active1 & 0x20000L) != 0L)
         {
            jjmatchedKind = 114;
            return 31;
         }
         if ((active0 & 0x310010000400L) != 0L || (active1 & 0x2000000008L) != 0L)
         {
            jjmatchedKind = 114;
            return 647;
         }
         if ((active0 & 0x200000000L) != 0L)
         {
            jjmatchedKind = 114;
            return 948;
         }
         if ((active0 & 0x102000000L) != 0L || (active1 & 0x40000L) != 0L)
         {
            jjmatchedKind = 114;
            return 76;
         }
         if ((active0 & 0x8000000000000000L) != 0L || (active1 & 0xc00001L) != 0L)
         {
            jjmatchedKind = 114;
            return 200;
         }
         if ((active0 & 0x20000000000000L) != 0L || (active1 & 0x10100L) != 0L)
         {
            jjmatchedKind = 114;
            return 286;
         }
         if ((active0 & 0xc0000L) != 0L)
            return 17;
         if ((active0 & 0x2000000000000L) != 0L)
         {
            jjmatchedKind = 114;
            return 97;
         }
         if ((active0 & 0x2000L) != 0L)
            return 22;
         if ((active0 & 0x801000000000L) != 0L)
         {
            jjmatchedKind = 114;
            return 271;
         }
         if ((active0 & 0x6800000000000000L) != 0L || (active1 & 0x46000082e4L) != 0L)
         {
            jjmatchedKind = 114;
            return 437;
         }
         if ((active0 & 0x300000000000000L) != 0L || (active1 & 0x200000L) != 0L)
         {
            jjmatchedKind = 114;
            return 132;
         }
         if ((active0 & 0x28008000000L) != 0L)
         {
            jjmatchedKind = 114;
            return 148;
         }
         if ((active0 & 0x80080000000L) != 0L || (active1 & 0x181000L) != 0L)
         {
            jjmatchedKind = 114;
            return 114;
         }
         if ((active0 & 0x90002004000000L) != 0L || (active1 & 0x1e0004010L) != 0L)
         {
            jjmatchedKind = 114;
            return 395;
         }
         if ((active0 & 0x1001040000000000L) != 0L)
         {
            jjmatchedKind = 114;
            return 793;
         }
         if ((active0 & 0x48004420000000L) != 0L)
         {
            jjmatchedKind = 114;
            return 180;
         }
         if ((active0 & 0x1000000L) != 0L || (active1 & 0x1010000000L) != 0L)
         {
            jjmatchedKind = 114;
            return 850;
         }
         if ((active0 & 0x40000000L) != 0L || (active1 & 0x7000002L) != 0L)
         {
            jjmatchedKind = 114;
            return 811;
         }
         if ((active0 & 0x20L) != 0L)
            return 949;
         if ((active0 & 0x4000000000000L) != 0L)
         {
            jjmatchedKind = 114;
            return 5;
         }
         return -1;
      case 1:
         if ((active0 & 0x8000000000000000L) != 0L || (active1 & 0x800001L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 210;
         }
         if ((active0 & 0x200010000400L) != 0L || (active1 & 0x2000000008L) != 0L)
            return 660;
         if ((active1 & 0x181000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 127;
         }
         if ((active0 & 0x1000000000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 803;
         }
         if ((active1 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 398;
         }
         if ((active1 & 0x2000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 262;
         }
         if ((active0 & 0x400000000800L) != 0L || (active1 & 0x20000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 51;
         }
         if ((active0 & 0x20000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 163;
         }
         if ((active1 & 0x1000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 849;
         }
         if ((active1 & 0x40000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 85;
         }
         if ((active0 & 0x2000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 950;
         }
         if ((active0 & 0x80000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 121;
         }
         if ((active0 & 0x1000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 270;
         }
         if ((active0 & 0x20000000000000L) != 0L || (active1 & 0x10000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 294;
         }
         if ((active1 & 0x4000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 394;
         }
         if ((active0 & 0x40000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 792;
         }
         if ((active0 & 0x200L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 253;
         }
         if ((active0 & 0x200000000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 135;
         }
         if ((active1 & 0x200000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 139;
         }
         if ((active0 & 0x10000000000L) != 0L)
            return 699;
         if ((active1 & 0x2L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 810;
         }
         if ((active1 & 0x8000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 753;
         }
         if ((active1 & 0x100L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 350;
         }
         if ((active1 & 0x4000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 840;
         }
         if ((active0 & 0x8000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 147;
         }
         if ((active0 & 0x6084980342000000L) != 0L || (active1 & 0x3008000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 948;
         }
         if ((active0 & 0x100000000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 131;
         }
         if ((active0 & 0x400000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 719;
         }
         if ((active1 & 0x800000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 742;
         }
         if ((active1 & 0x200L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 436;
         }
         if ((active1 & 0x10L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 951;
         }
         if ((active0 & 0x9004000000000L) != 0L || (active1 & 0x400000L) != 0L)
            return 948;
         if ((active1 & 0x10000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 890;
         }
         if ((active0 & 0x40008001000000L) != 0L || (active1 & 0x180000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 2;
               jjmatchedPos = 1;
            }
            return 948;
         }
         if ((active0 & 0x800000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 265;
         }
         if ((active0 & 0x400000000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 772;
         }
         if ((active0 & 0x2000000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 106;
         }
         if ((active0 & 0x10000004000000L) != 0L || (active1 & 0x40000000L) != 0L)
            return 417;
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 191;
         }
         if ((active0 & 0x800000000000000L) != 0L || (active1 & 0x46000000e4L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 1;
            }
            return 490;
         }
         if ((active0 & 0x400000000L) != 0L)
            return 181;
         return -1;
      case 2:
         if ((active1 & 0x40000L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 2;
            }
            return 84;
         }
         if ((active0 & 0x1000000000L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 2;
            }
            return 275;
         }
         if ((active1 & 0x200000L) != 0L)
            return 138;
         if ((active1 & 0x200L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 2;
            }
            return 435;
         }
         if ((active1 & 0x4L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 2;
            }
            return 509;
         }
         if ((active0 & 0x8000000L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 2;
            }
            return 152;
         }
         if ((active0 & 0xe84edc0bd2400000L) != 0L || (active1 & 0x61ef81b0e3L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 2;
            }
            return 948;
         }
         if ((active0 & 0x20000000000000L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 2;
            }
            return 332;
         }
         if ((active1 & 0x100L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 2;
            }
            return 357;
         }
         if ((active1 & 0x10000000L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 2;
            }
            return 951;
         }
         if ((active0 & 0x800L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 2;
            }
            return 50;
         }
         if ((active0 & 0x200L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 2;
            }
            return 252;
         }
         if ((active1 & 0x4000L) != 0L)
            return 393;
         if ((active0 & 0x200000000000000L) != 0L)
            return 134;
         if ((active0 & 0x20000000L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 2;
            }
            return 190;
         }
         if ((active0 & 0x400L) != 0L || (active1 & 0x8L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 2;
               jjmatchedPos = 2;
            }
            return 689;
         }
         if ((active1 & 0x10L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 2;
               jjmatchedPos = 2;
            }
            return 948;
         }
         if ((active0 & 0x159000a001000000L) != 0L || (active1 & 0x1e001a0000L) != 0L)
            return 948;
         if ((active0 & 0x20000000000L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 2;
            }
            return 162;
         }
         return -1;
      case 3:
         if ((active0 & 0x880382000000L) != 0L || (active1 & 0x1ea000210L) != 0L)
            return 948;
         if ((active1 & 0x4L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 3;
            }
            return 539;
         }
         if ((active0 & 0x800L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 3;
            }
            return 49;
         }
         if ((active1 & 0x100L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 3;
            }
            return 370;
         }
         if ((active0 & 0x20000000000000L) != 0L)
            return 331;
         if ((active1 & 0x100000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 3;
            }
            return 28;
         }
         if ((active0 & 0x20000000000L) != 0L)
            return 161;
         if ((active0 & 0x400L) != 0L || (active1 & 0x8L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 3;
            }
            return 688;
         }
         if ((active0 & 0xe84e541878400200L) != 0L || (active1 & 0x601585b0e3L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 114;
               jjmatchedPos = 3;
            }
            return 948;
         }
         return -1;
      case 4:
         if ((active0 & 0x800L) != 0L)
         {
            jjmatchedKind = 114;
            jjmatchedPos = 4;
            return 48;
         }
         if ((active0 & 0x400L) != 0L || (active1 & 0x8L) != 0L)
         {
            jjmatchedKind = 114;
            jjmatchedPos = 4;
            return 687;
         }
         if ((active1 & 0x100100000L) != 0L)
            return 28;
         if ((active0 & 0x6044440008400000L) != 0L || (active1 & 0x60110181e7L) != 0L)
         {
            jjmatchedKind = 114;
            jjmatchedPos = 4;
            return 948;
         }
         if ((active0 & 0x880a101870000200L) != 0L || (active1 & 0x4843000L) != 0L)
            return 948;
         return -1;
      case 5:
         if ((active0 & 0x800L) != 0L)
            return 47;
         if ((active0 & 0x2000040008000400L) != 0L || (active1 & 0x601101818dL) != 0L)
         {
            jjmatchedKind = 114;
            jjmatchedPos = 5;
            return 948;
         }
         if ((active1 & 0x60L) != 0L)
            return 28;
         if ((active0 & 0x4044400000400000L) != 0L || (active1 & 0x2L) != 0L)
            return 948;
         return -1;
      case 6:
         if ((active0 & 0x2000000000000400L) != 0L || (active1 & 0x401000018cL) != 0L)
         {
            jjmatchedKind = 114;
            jjmatchedPos = 6;
            return 948;
         }
         if ((active0 & 0x40008000000L) != 0L || (active1 & 0x2001018001L) != 0L)
            return 948;
         return -1;
      case 7:
         if ((active0 & 0x400L) != 0L || (active1 & 0x8L) != 0L)
         {
            jjmatchedKind = 114;
            jjmatchedPos = 7;
            return 948;
         }
         if ((active0 & 0x2000000000000000L) != 0L || (active1 & 0x4010000184L) != 0L)
            return 948;
         return -1;
      case 8:
         if ((active0 & 0x400L) != 0L || (active1 & 0x8L) != 0L)
            return 948;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1){
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 34:
         return jjStopAtPos(0, 111);
      case 39:
         return jjStopAtPos(0, 104);
      case 40:
         return jjStopAtPos(0, 3);
      case 41:
         return jjStopAtPos(0, 4);
      case 42:
         return jjStopAtPos(0, 14);
      case 43:
         return jjStopAtPos(0, 12);
      case 44:
         return jjStopAtPos(0, 6);
      case 45:
         return jjStartNfaWithStates_0(0, 13, 22);
      case 46:
         return jjStartNfaWithStates_0(0, 5, 949);
      case 47:
         return jjStopAtPos(0, 15);
      case 59:
         return jjStopAtPos(0, 7);
      case 60:
         jjmatchedKind = 18;
         return jjMoveStringLiteralDfa1_0(0x80000L, 0x0L);
      case 61:
         return jjStopAtPos(0, 16);
      case 62:
         jjmatchedKind = 20;
         return jjMoveStringLiteralDfa1_0(0x200000L, 0x0L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa1_0(0x90002004000000L, 0x1e0004010L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa1_0(0x1001040000000000L, 0x0L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa1_0(0x6800000000000000L, 0x46000082e4L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa1_0(0x20000000000000L, 0x10100L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa1_0(0x400000000800L, 0x20000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa1_0(0x102000000L, 0x40000L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa1_0(0x2000000000000L, 0x0L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa1_0(0x4000000000000L, 0x0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa1_0(0x310010000400L, 0x2000000008L);
      case 74:
      case 106:
         return jjMoveStringLiteralDfa1_0(0x200000000L, 0x0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa1_0(0x80080000000L, 0x181000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa1_0(0x300000000000000L, 0x200000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa1_0(0x28008000000L, 0x0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa1_0(0x48004420000000L, 0x0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa1_0(0x8000000000000000L, 0xc00001L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa1_0(0x40000000L, 0x7000002L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa1_0(0x400000000400000L, 0x808000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa1_0(0x1000000L, 0x1010000000L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa1_0(0x800000200L, 0x2000L);
      case 87:
      case 119:
         return jjMoveStringLiteralDfa1_0(0x801000000000L, 0x0L);
      case 124:
         return jjMoveStringLiteralDfa1_0(0x100L, 0x0L);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 61:
         if ((active0 & 0x80000L) != 0L)
            return jjStopAtPos(1, 19);
         else if ((active0 & 0x200000L) != 0L)
            return jjStopAtPos(1, 21);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x104000008000000L, active1, 0x1003000200L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x4000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x20000000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x2020040080400000L, active1, 0x18002L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0x40000000000000L, active1, 0L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000000L, active1, 0L);
      case 73:
      case 105:
         if ((active1 & 0x400000L) != 0L)
            return jjStartNfaWithStates_0(1, 86, 948);
         return jjMoveStringLiteralDfa2_0(active0, 0x4200880040000000L, active1, 0x800000100L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000000L, active1, 0x40000L);
      case 78:
      case 110:
         if ((active0 & 0x400000000L) != 0L)
            return jjStartNfaWithStates_0(1, 34, 181);
         else if ((active0 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 45;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0x2010000600L, active1, 0x2000000008L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa2_0(active0, 0x9800008201000000L, active1, 0x4604b810e5L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x2000L);
      case 81:
      case 113:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x8000000L);
      case 82:
      case 114:
         if ((active0 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 38;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0xa000002000000L, active1, 0x10000010L);
      case 83:
      case 115:
         if ((active0 & 0x4000000L) != 0L)
         {
            jjmatchedKind = 26;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x10000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 40, 699);
         return jjMoveStringLiteralDfa2_0(active0, 0x10000800000000L, active1, 0x40000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x180000000L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa2_0(active0, 0x400020120000000L, active1, 0L);
      case 86:
      case 118:
         return jjMoveStringLiteralDfa2_0(active0, 0x80000000000000L, active1, 0L);
      case 88:
      case 120:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000000800L, active1, 0x20000L);
      case 89:
      case 121:
         if ((active0 & 0x1000000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 48, 948);
         break;
      case 124:
         if ((active0 & 0x100L) != 0L)
            return jjStopAtPos(1, 8);
         break;
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x2000000000L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x4180000000L);
      case 67:
      case 99:
         if ((active0 & 0x10000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 52, 948);
         return jjMoveStringLiteralDfa3_0(active0, 0x800L, active1, 0L);
      case 68:
      case 100:
         if ((active0 & 0x2000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 37, 948);
         else if ((active1 & 0x200000L) != 0L)
            return jjStartNfaWithStates_0(2, 85, 138);
         return jjMoveStringLiteralDfa3_0(active0, 0x8000000000000L, active1, 0x1000000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x1000000000L, active1, 0x10L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa3_0(active0, 0x40000080000000L, active1, 0L);
      case 71:
      case 103:
         if ((active0 & 0x80000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 55, 948);
         else if ((active1 & 0x80000L) != 0L)
         {
            jjmatchedKind = 83;
            jjmatchedPos = 2;
         }
         return jjMoveStringLiteralDfa3_0(active0, 0x40000000L, active1, 0x110002L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000500a00000200L, active1, 0x40008000L);
      case 75:
      case 107:
         return jjMoveStringLiteralDfa3_0(active0, 0x80000000000L, active1, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x20100400000L, active1, 0x1L);
      case 77:
      case 109:
         if ((active0 & 0x400000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 58, 948);
         break;
      case 78:
      case 110:
         if ((active0 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 57, 134);
         else if ((active1 & 0x800000000L) != 0L)
            return jjStartNfaWithStates_0(2, 99, 948);
         else if ((active1 & 0x1000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 100, 948);
         return jjMoveStringLiteralDfa3_0(active0, 0x2000000010000000L, active1, 0x2000004L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0x2000002000000L, active1, 0x200400e0L);
      case 80:
      case 112:
         if ((active0 & 0x1000000L) != 0L)
            return jjStartNfaWithStates_0(2, 24, 948);
         else if ((active1 & 0x20000L) != 0L)
            return jjStartNfaWithStates_0(2, 81, 948);
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x2000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0x4000000000000000L, active1, 0x8000000L);
      case 83:
      case 115:
         if ((active1 & 0x4000L) != 0L)
            return jjStartNfaWithStates_0(2, 78, 393);
         else if ((active1 & 0x200000000L) != 0L)
            return jjStartNfaWithStates_0(2, 97, 948);
         return jjMoveStringLiteralDfa3_0(active0, 0x20000000000000L, active1, 0x300L);
      case 84:
      case 116:
         if ((active0 & 0x8000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 39, 948);
         else if ((active1 & 0x400000000L) != 0L)
            return jjStartNfaWithStates_0(2, 98, 948);
         return jjMoveStringLiteralDfa3_0(active0, 0x840028000400L, active1, 0x8L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0x800000000000000L, active1, 0x14000000L);
      case 86:
      case 118:
         return jjMoveStringLiteralDfa3_0(active0, 0x4000000000000L, active1, 0L);
      case 87:
      case 119:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x801000L);
      case 88:
      case 120:
         if ((active0 & 0x100000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 56, 948);
         else if ((active0 & 0x1000000000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 60, 948);
         break;
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 49:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x100000L);
      case 65:
      case 97:
         if ((active1 & 0x10L) != 0L)
            return jjStartNfaWithStates_0(3, 68, 948);
         break;
      case 67:
      case 99:
         if ((active0 & 0x20000000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 53, 331);
         return jjMoveStringLiteralDfa4_0(active0, 0x4000000000000000L, active1, 0L);
      case 68:
      case 100:
         if ((active1 & 0x2000000L) != 0L)
            return jjStartNfaWithStates_0(3, 89, 948);
         break;
      case 69:
      case 101:
         if ((active0 & 0x80000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 43, 948);
         return jjMoveStringLiteralDfa4_0(active0, 0x8000030400c00L, active1, 0x803008L);
      case 72:
      case 104:
         if ((active0 & 0x800000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 47, 948);
         return jjMoveStringLiteralDfa4_0(active0, 0x40000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa4_0(active0, 0x4000000000000L, active1, 0x1000002L);
      case 75:
      case 107:
         return jjMoveStringLiteralDfa4_0(active0, 0x100000000000L, active1, 0L);
      case 76:
      case 108:
         if ((active0 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_0(3, 32, 948);
         else if ((active0 & 0x20000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 41, 161);
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x4000008000L);
      case 77:
      case 109:
         if ((active0 & 0x2000000L) != 0L)
            return jjStartNfaWithStates_0(3, 25, 948);
         break;
      case 78:
      case 110:
         if ((active0 & 0x200000000L) != 0L)
            return jjStartNfaWithStates_0(3, 33, 948);
         else if ((active1 & 0x40000000L) != 0L)
            return jjStartNfaWithStates_0(3, 94, 948);
         else if ((active1 & 0x80000000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 3;
         }
         return jjMoveStringLiteralDfa4_0(active0, 0x8800000800000000L, active1, 0x114000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa4_0(active0, 0x200L, active1, 0x40000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0x1000000000L, active1, 0x100e0L);
      case 83:
      case 115:
         if ((active1 & 0x20000000L) != 0L)
            return jjStartNfaWithStates_0(3, 93, 948);
         return jjMoveStringLiteralDfa4_0(active0, 0x40400000000000L, active1, 0L);
      case 84:
      case 116:
         if ((active0 & 0x80000000L) != 0L)
            return jjStartNfaWithStates_0(3, 31, 948);
         else if ((active1 & 0x200L) != 0L)
            return jjStartNfaWithStates_0(3, 73, 948);
         else if ((active1 & 0x8000000L) != 0L)
            return jjStartNfaWithStates_0(3, 91, 948);
         return jjMoveStringLiteralDfa4_0(active0, 0x2000000000000000L, active1, 0x104L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0x2000008000000L, active1, 0x2000000000L);
      case 87:
      case 119:
         return jjMoveStringLiteralDfa4_0(active0, 0x40000000000L, active1, 0L);
      case 89:
      case 121:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x1L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 48:
         if ((active1 & 0x100000L) != 0L)
            return jjStartNfaWithStates_0(4, 84, 28);
         break;
      case 50:
         if ((active1 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_0(4, 96, 28);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x1000104L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa5_0(active0, 0x400000L, active1, 0x10000000L);
      case 68:
      case 100:
         if ((active1 & 0x4000000L) != 0L)
            return jjStartNfaWithStates_0(4, 90, 948);
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0xe0L);
      case 69:
      case 101:
         if ((active0 & 0x1000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 36, 948);
         else if ((active0 & 0x100000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 44, 948);
         return jjMoveStringLiteralDfa5_0(active0, 0x40040000000000L, active1, 0x4000010000L);
      case 71:
      case 103:
         if ((active0 & 0x800000000L) != 0L)
            return jjStartNfaWithStates_0(4, 35, 948);
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x1L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x8000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa5_0(active0, 0x4000000000000000L, active1, 0L);
      case 78:
      case 110:
         if ((active0 & 0x200L) != 0L)
            return jjStartNfaWithStates_0(4, 9, 948);
         return jjMoveStringLiteralDfa5_0(active0, 0x4000000000000L, active1, 0x2000000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x2L);
      case 80:
      case 112:
         if ((active0 & 0x2000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 49, 948);
         return jjMoveStringLiteralDfa5_0(active0, 0x800L, active1, 0L);
      case 82:
      case 114:
         if ((active0 & 0x10000000L) != 0L)
            return jjStartNfaWithStates_0(4, 28, 948);
         else if ((active0 & 0x20000000L) != 0L)
            return jjStartNfaWithStates_0(4, 29, 948);
         else if ((active0 & 0x8000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 51, 948);
         else if ((active1 & 0x1000L) != 0L)
            return jjStartNfaWithStates_0(4, 76, 948);
         else if ((active1 & 0x2000L) != 0L)
            return jjStartNfaWithStates_0(4, 77, 948);
         else if ((active1 & 0x40000L) != 0L)
            return jjStartNfaWithStates_0(4, 82, 948);
         else if ((active1 & 0x800000L) != 0L)
            return jjStartNfaWithStates_0(4, 87, 948);
         return jjMoveStringLiteralDfa5_0(active0, 0x2000000008000400L, active1, 0x8L);
      case 84:
      case 116:
         if ((active0 & 0x40000000L) != 0L)
            return jjStartNfaWithStates_0(4, 30, 948);
         else if ((active0 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 59, 948);
         else if ((active0 & 0x8000000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 63, 948);
         return jjMoveStringLiteralDfa5_0(active0, 0x400000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(3, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1);
      return 5;
   }
   switch(curChar)
   {
      case 49:
         if ((active1 & 0x20L) != 0L)
            return jjStartNfaWithStates_0(5, 69, 28);
         break;
      case 50:
         if ((active1 & 0x40L) != 0L)
            return jjStartNfaWithStates_0(5, 70, 28);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa6_0(active0, 0x8000000L, active1, 0x10000000L);
      case 69:
      case 101:
         if ((active0 & 0x4000000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 62, 948);
         return jjMoveStringLiteralDfa6_0(active0, 0x40000000000L, active1, 0x10000L);
      case 71:
      case 103:
         if ((active0 & 0x4000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 50, 948);
         break;
      case 73:
      case 105:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x2000000004L);
      case 78:
      case 110:
         if ((active1 & 0x2L) != 0L)
            return jjStartNfaWithStates_0(5, 65, 948);
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x1008100L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_0(active0, 0x2000000000000000L, active1, 0x1L);
      case 83:
      case 115:
         if ((active0 & 0x400000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 46, 948);
         return jjMoveStringLiteralDfa6_0(active0, 0x400L, active1, 0x4000000088L);
      case 84:
      case 116:
         if ((active0 & 0x800L) != 0L)
            return jjStartNfaWithStates_0(5, 11, 47);
         else if ((active0 & 0x400000L) != 0L)
            return jjStartNfaWithStates_0(5, 22, 948);
         else if ((active0 & 0x40000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 54, 948);
         break;
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(4, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, active1);
      return 6;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x4000000100L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_0(active0, 0x400L, active1, 0x8L);
      case 71:
      case 103:
         if ((active1 & 0x8000L) != 0L)
            return jjStartNfaWithStates_0(6, 79, 948);
         break;
      case 73:
      case 105:
         return jjMoveStringLiteralDfa7_0(active0, 0x2000000000000000L, active1, 0L);
      case 76:
      case 108:
         if ((active0 & 0x8000000L) != 0L)
            return jjStartNfaWithStates_0(6, 27, 948);
         break;
      case 78:
      case 110:
         if ((active0 & 0x40000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 42, 948);
         else if ((active1 & 0x1L) != 0L)
            return jjStartNfaWithStates_0(6, 64, 948);
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x4L);
      case 83:
      case 115:
         if ((active1 & 0x10000L) != 0L)
            return jjStartNfaWithStates_0(6, 80, 948);
         else if ((active1 & 0x1000000L) != 0L)
            return jjStartNfaWithStates_0(6, 88, 948);
         break;
      case 84:
      case 116:
         if ((active1 & 0x2000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 101, 948);
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x10000000L);
      case 89:
      case 121:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x80L);
      default :
         break;
   }
   return jjStartNfa_0(5, active0, active1);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(5, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, active1);
      return 7;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa8_0(active0, 0x400L, active1, 0x8L);
      case 68:
      case 100:
         if ((active0 & 0x2000000000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 61, 948);
         break;
      case 69:
      case 101:
         if ((active1 & 0x100L) != 0L)
            return jjStartNfaWithStates_0(7, 72, 948);
         else if ((active1 & 0x10000000L) != 0L)
            return jjStartNfaWithStates_0(7, 92, 948);
         else if ((active1 & 0x4000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 102, 948);
         break;
      case 83:
      case 115:
         if ((active1 & 0x4L) != 0L)
            return jjStartNfaWithStates_0(7, 66, 948);
         else if ((active1 & 0x80L) != 0L)
            return jjStartNfaWithStates_0(7, 71, 948);
         break;
      default :
         break;
   }
   return jjStartNfa_0(6, active0, active1);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(6, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, active1);
      return 8;
   }
   switch(curChar)
   {
      case 84:
      case 116:
         if ((active0 & 0x400L) != 0L)
         {
            jjmatchedKind = 10;
            jjmatchedPos = 8;
         }
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x8L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0, active1);
}
private int jjMoveStringLiteralDfa9_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(7, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, 0L, active1);
      return 9;
   }
   switch(curChar)
   {
      case 83:
      case 115:
         if ((active1 & 0x8L) != 0L)
            return jjStartNfaWithStates_0(9, 67, 948);
         break;
      default :
         break;
   }
   return jjStartNfa_0(8, 0L, active1);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 948;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 294:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 134:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 121:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 949:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAdd(935); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(931, 932); }
                  break;
               case 753:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 180:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 253:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 5:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 810:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 262:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 200:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 31:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 539:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 436:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 417:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 811:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 719:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 210:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 792:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 161:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 163:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 435:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 286:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 252:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 106:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 97:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 190:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 951:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 49:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 437:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 395:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 660:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 51:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 793:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 890:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 509:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 47:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 688:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 135:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 127:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 50:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 76:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 147:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 849:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 772:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 699:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 84:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 350:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 840:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 271:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 398:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 393:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 265:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 162:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 138:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 331:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 370:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 803:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 647:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 254:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 131:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 191:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 275:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 109)
                        kind = 109;
                     { jjCheckNAddStates(0, 8); }
                  }
                  else if ((0x100002600L & l) != 0L)
                  {
                     if (kind > 1)
                        kind = 1;
                  }
                  else if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  else if (curChar == 46)
                     { jjCheckNAddTwoStates(931, 935); }
                  else if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 22;
                  else if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 19;
                  else if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 17;
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 139:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 132:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 850:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 181:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 152:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 114:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 332:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 490:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 712:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 689:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 948:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 85:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 687:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 48:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 148:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 357:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 270:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 394:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 950:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 742:
                  if ((0x83ff001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x8000001800000000L & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 1:
                  if (curChar == 10 && kind > 1)
                     kind = 1;
                  break;
               case 2:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 17:
                  if (curChar == 62 && kind > 17)
                     kind = 17;
                  break;
               case 18:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if (curChar == 61 && kind > 17)
                     kind = 17;
                  break;
               case 20:
                  if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 21:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 22:
                  if (curChar != 45)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddStates(9, 11); }
                  break;
               case 23:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjCheckNAddStates(9, 11); }
                  break;
               case 24:
                  if ((0x2400L & l) != 0L && kind > 103)
                     kind = 103;
                  break;
               case 25:
                  if (curChar == 10 && kind > 103)
                     kind = 103;
                  break;
               case 26:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if ((0x8000001800000000L & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  { jjCheckNAddTwoStates(27, 28); }
                  break;
               case 28:
                  if ((0x83ff001800000000L & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  { jjCheckNAdd(28); }
                  break;
               case 38:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 375:
                  if ((0x100002600L & l) != 0L)
                     { jjAddStates(12, 13); }
                  break;
               case 930:
                  if (curChar == 46)
                     { jjCheckNAddTwoStates(931, 935); }
                  break;
               case 931:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(931, 932); }
                  break;
               case 933:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(934); }
                  break;
               case 934:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 107)
                     kind = 107;
                  { jjCheckNAdd(934); }
                  break;
               case 935:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 108)
                     kind = 108;
                  { jjCheckNAdd(935); }
                  break;
               case 936:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 109)
                     kind = 109;
                  { jjCheckNAddStates(0, 8); }
                  break;
               case 937:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(937, 932); }
                  break;
               case 938:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(938, 939); }
                  break;
               case 939:
                  if (curChar == 46)
                     { jjCheckNAddTwoStates(940, 932); }
                  break;
               case 940:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(940, 932); }
                  break;
               case 941:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(941, 942); }
                  break;
               case 942:
                  if (curChar != 46)
                     break;
                  if (kind > 108)
                     kind = 108;
                  { jjCheckNAdd(943); }
                  break;
               case 943:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 108)
                     kind = 108;
                  { jjCheckNAdd(943); }
                  break;
               case 944:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 109)
                     kind = 109;
                  { jjCheckNAdd(944); }
                  break;
               case 945:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(945, 946); }
                  break;
               case 946:
                  if ((0x8000001800000000L & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  { jjCheckNAdd(947); }
                  break;
               case 947:
                  if ((0x83ff001800000000L & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  { jjCheckNAdd(947); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 294:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 340;
                  else if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 326;
                  else if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 322;
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 303;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 293;
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 332;
                  else if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 316;
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 298;
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 134:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 121:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 123;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 753:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 764;
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 758;
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 752;
                  if ((0x100000001000L & l) != 0L)
                  {
                     if (kind > 2)
                        kind = 2;
                  }
                  break;
               case 180:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 197;
                  else if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 191;
                  else if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 187;
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 181;
                  else if ((0x4000000040L & l) != 0L)
                  {
                     if (kind > 2)
                        kind = 2;
                  }
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 179;
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 253:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 257;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 252;
                  break;
               case 5:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 810:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 844;
                  else if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 833;
                  else if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 829;
                  else if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 823;
                  else if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 817;
                  if ((0x200000002L & l) != 0L)
                     { jjCheckNAdd(32); }
                  break;
               case 262:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 200:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 248;
                  else if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 244;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 210;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 204;
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 237;
                  else if ((0x200000002L & l) != 0L)
                     { jjCheckNAdd(32); }
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 229;
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 226;
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 221;
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 31:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 71;
                  else if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 43;
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  else if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 30;
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 65;
                  else if ((0x400000004000L & l) != 0L)
                     { jjCheckNAdd(32); }
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 58;
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 53;
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 539:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 538;
                  break;
               case 436:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 448;
                  else if ((0x8000000080000L & l) != 0L)
                     { jjCheckNAdd(13); }
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 441;
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 435;
                  break;
               case 417:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 416;
                  break;
               case 811:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 845;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 842;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 840;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 834;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 830;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 824;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 818;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 810;
                  break;
               case 719:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x10000000100000L & l) != 0L)
                  {
                     if (kind > 2)
                        kind = 2;
                  }
                  else if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 738;
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 723;
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 728;
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 718;
                  break;
               case 210:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 792:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 791;
                  break;
               case 161:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x20000000200L & l) != 0L)
                     { jjCheckNAdd(160); }
                  break;
               case 163:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 167;
                  else if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 435:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x2000000020L & l) != 0L)
                  {
                     if (kind > 2)
                        kind = 2;
                  }
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 440;
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 434;
                  break;
               case 286:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 387;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 372;
                  else if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 365;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 341;
                  else if ((0x200000002L & l) != 0L)
                     { jjCheckNAdd(7); }
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 362;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 358;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 333;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 285;
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 350;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 327;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 323;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 317;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 309;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 304;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 299;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 252:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 106:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 97:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 106;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 103;
                  else if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 100;
                  else if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(67); }
                  if ((0x800000008000L & l) != 0L)
                  {
                     if (kind > 2)
                        kind = 2;
                  }
                  break;
               case 190:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 951:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x2000000020L & l) != 0L)
                  {
                     if (kind > 2)
                        kind = 2;
                  }
                  break;
               case 49:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 437:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 618;
                  else if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 615;
                  else if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 561;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 557;
                  else if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 485;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 449;
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 611;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 546;
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 482;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 444;
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 601;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 541;
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 479;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 442;
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 586;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 535;
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 465;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 436;
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 576;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 526;
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 456;
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 566;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 518;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 510;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 505;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 501;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 497;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 490;
                  break;
               case 395:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 430;
                  else if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 428;
                  else if ((0x10000000100000L & l) != 0L)
                  {
                     if (kind > 2)
                        kind = 2;
                  }
                  else if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 417;
                  else if ((0x4000000040000L & l) != 0L)
                     { jjCheckNAdd(13); }
                  else if ((0x400000004000L & l) != 0L)
                     { jjCheckNAdd(7); }
                  else if ((0x1000000010L & l) != 0L)
                     { jjCheckNAdd(32); }
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 398;
                  else if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 394;
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 408;
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 405;
                  break;
               case 660:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 704;
                  else if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 682;
                  else if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 669;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 666;
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 659;
                  if ((0x10000000100000L & l) != 0L)
                     { jjCheckNAdd(102); }
                  else if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 678;
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 689;
                  if ((0x10000000100000L & l) != 0L)
                  {
                     if (kind > 2)
                        kind = 2;
                  }
                  break;
               case 51:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 70;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 57;
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 50;
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 64;
                  else if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(34); }
                  break;
               case 793:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 807;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 803;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 792;
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 801;
                  if ((0x20000000200L & l) != 0L)
                     { jjCheckNAdd(67); }
                  break;
               case 890:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x20000000200000L & l) != 0L)
                     { jjCheckNAdd(13); }
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 917;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 914;
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 905;
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 898;
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 889;
                  break;
               case 509:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 544;
                  else if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 539;
                  else if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 533;
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 516;
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 524;
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 508;
                  break;
               case 47:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 688:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 702;
                  else if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 687;
                  break;
               case 135:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 127:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 50:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 76:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 94;
                  else if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 85;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 82;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 79;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 75;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 91;
                  if ((0x800000008000L & l) != 0L)
                     { jjCheckNAdd(3); }
                  break;
               case 147:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 152;
                  else if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 849:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 848;
                  break;
               case 772:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 771;
                  break;
               case 699:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 698;
                  break;
               case 84:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x200000002L & l) != 0L)
                     { jjCheckNAdd(67); }
                  break;
               case 350:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 371;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 349;
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 357;
                  break;
               case 840:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x80000000800000L & l) != 0L)
                     { jjCheckNAdd(145); }
                  else if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 839;
                  break;
               case 271:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 282;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 279;
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 276;
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 398:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 397;
                  break;
               case 393:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 392;
                  break;
               case 265:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(3); }
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 162:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 138:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 331:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 338;
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 330;
                  break;
               case 370:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 369;
                  break;
               case 803:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x10000000100000L & l) != 0L)
                     { jjCheckNAdd(77); }
                  break;
               case 647:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 705;
                  else if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 699;
                  else if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 653;
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 646;
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 692;
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 690;
                  if ((0x400000004000L & l) != 0L)
                     { jjCheckNAdd(67); }
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 683;
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 679;
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 670;
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 667;
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 660;
                  break;
               case 254:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 267;
                  else if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 262;
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 258;
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 265;
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 131:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 191:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 275:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 274;
                  if ((0x400000004000L & l) != 0L)
                  {
                     if (kind > 2)
                        kind = 2;
                  }
                  break;
               case 0:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x10000000100000L & l) != 0L)
                     { jjCheckNAddStates(14, 27); }
                  else if ((0x4000000040000L & l) != 0L)
                     { jjAddStates(28, 35); }
                  else if ((0x400000004L & l) != 0L)
                     { jjAddStates(36, 40); }
                  else if ((0x8000000080000L & l) != 0L)
                     { jjAddStates(41, 57); }
                  else if ((0x20000000200L & l) != 0L)
                     { jjAddStates(58, 69); }
                  else if ((0x40000000400000L & l) != 0L)
                     { jjAddStates(70, 74); }
                  else if ((0x800000008L & l) != 0L)
                     { jjAddStates(75, 102); }
                  else if ((0x200000002L & l) != 0L)
                     { jjCheckNAddStates(103, 113); }
                  else if ((0x1000000010L & l) != 0L)
                     { jjAddStates(114, 130); }
                  else if ((0x80000000800000L & l) != 0L)
                     { jjAddStates(131, 134); }
                  else if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(135, 139); }
                  else if ((0x1000000010000L & l) != 0L)
                     { jjAddStates(140, 149); }
                  else if ((0x800000008000L & l) != 0L)
                     { jjCheckNAddStates(150, 156); }
                  else if ((0x400000004000L & l) != 0L)
                     { jjCheckNAddStates(157, 163); }
                  else if ((0x200000002000L & l) != 0L)
                     { jjAddStates(164, 167); }
                  else if ((0x100000001000L & l) != 0L)
                     { jjAddStates(168, 172); }
                  else if ((0x8000000080L & l) != 0L)
                     { jjCheckNAddStates(173, 177); }
                  else if ((0x4000000040L & l) != 0L)
                     { jjAddStates(178, 184); }
                  else if ((0x2000000020L & l) != 0L)
                     { jjAddStates(185, 193); }
                  else if ((0x400000004000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 15;
                  else if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 11;
                  else if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 8;
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 139:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 141;
                  else if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 132:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 142;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 135;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 131;
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 850:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 928;
                  else if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 920;
                  else if ((0x800000008000L & l) != 0L)
                  {
                     if (kind > 2)
                        kind = 2;
                  }
                  else if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 858;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 856;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 849;
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 918;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 884;
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 915;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 871;
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 906;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 860;
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 899;
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 890;
                  break;
               case 181:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x100000001000L & l) != 0L)
                     { jjCheckNAdd(7); }
                  break;
               case 152:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 114:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 127;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 124;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 115;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 121;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 332:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 339;
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 331;
                  break;
               case 490:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 556;
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 545;
                  else if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 504;
                  else if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 500;
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 540;
                  else if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 496;
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 534;
                  else if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 489;
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 525;
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 517;
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 509;
                  break;
               case 712:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 788;
                  else if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 781;
                  else if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 772;
                  else if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 765;
                  else if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 747;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 744;
                  else if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 742;
                  else if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(67); }
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 715;
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 759;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 739;
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 711;
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 753;
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 729;
                  if ((0x2000000020000L & l) != 0L)
                     { jjCheckNAdd(60); }
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 724;
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 719;
                  break;
               case 689:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 703;
                  else if ((0x800000008000L & l) != 0L)
                  {
                     if (kind > 2)
                        kind = 2;
                  }
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 688;
                  break;
               case 948:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  break;
               case 85:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 687:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 686;
                  break;
               case 48:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 148:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 168;
                  else if ((0x800000008000L & l) != 0L)
                  {
                     if (kind > 2)
                        kind = 2;
                  }
                  else if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 158;
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 156;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 153;
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 163;
                  else if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 357:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 370;
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 356;
                  break;
               case 270:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 275;
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(45); }
                  break;
               case 394:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 393;
                  break;
               case 950:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x200000002000000L & l) != 0L)
                  {
                     if (kind > 2)
                        kind = 2;
                  }
                  break;
               case 742:
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAdd(28); }
                  }
                  if ((0x2fffffffafffffffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                     { jjCheckNAddTwoStates(27, 28); }
                  }
                  if ((0x400000004000000L & l) != 0L)
                     { jjCheckNAdd(13); }
                  break;
               case 3:
                  if ((0x4000000040000L & l) != 0L && kind > 2)
                     kind = 2;
                  break;
               case 4:
               case 862:
                  if ((0x20000000200000L & l) != 0L)
                     { jjCheckNAdd(3); }
                  break;
               case 6:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 7:
                  if ((0x200000002000000L & l) != 0L && kind > 2)
                     kind = 2;
                  break;
               case 8:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(7); }
                  break;
               case 9:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
               case 155:
                  if ((0x200000002L & l) != 0L)
                     { jjCheckNAdd(3); }
                  break;
               case 11:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 13:
                  if ((0x2000000020L & l) != 0L && kind > 2)
                     kind = 2;
                  break;
               case 14:
                  if ((0x400000004000L & l) != 0L)
                     { jjCheckNAdd(13); }
                  break;
               case 15:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if ((0x400000004000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 23:
                  if (kind > 103)
                     kind = 103;
                  { jjAddStates(9, 11); }
                  break;
               case 27:
                  if ((0x2fffffffafffffffL & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  { jjCheckNAddTwoStates(27, 28); }
                  break;
               case 28:
                  if ((0x2fffffffafffffffL & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  { jjCheckNAdd(28); }
                  break;
               case 29:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(185, 193); }
                  break;
               case 30:
               case 74:
               case 484:
                  if ((0x8000000080000L & l) != 0L)
                     { jjCheckNAdd(13); }
                  break;
               case 32:
                  if ((0x1000000010L & l) != 0L && kind > 2)
                     kind = 2;
                  break;
               case 33:
               case 93:
               case 717:
                  if ((0x400000004000L & l) != 0L)
                     { jjCheckNAdd(32); }
                  break;
               case 34:
                  if ((0x800000008L & l) != 0L && kind > 2)
                     kind = 2;
                  break;
               case 35:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(34); }
                  break;
               case 36:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 39:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 41:
                  if ((0x1000000010000L & l) != 0L)
                     { jjCheckNAdd(13); }
                  break;
               case 42:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 44:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  if ((0x400000004000L & l) != 0L && kind > 2)
                     kind = 2;
                  break;
               case 46:
               case 185:
               case 206:
               case 396:
               case 412:
               case 419:
               case 492:
               case 512:
               case 694:
               case 721:
               case 726:
               case 892:
               case 908:
                  if ((0x800000008000L & l) != 0L)
                     { jjCheckNAdd(45); }
                  break;
               case 52:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 53:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(34); }
                  break;
               case 54:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
               case 133:
               case 260:
               case 281:
               case 285:
               case 288:
               case 325:
               case 390:
               case 401:
               case 487:
               case 559:
               case 568:
               case 648:
               case 761:
               case 873:
               case 901:
                  if ((0x10000000100000L & l) != 0L)
                     { jjCheckNAdd(13); }
                  break;
               case 56:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 57:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 58:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 59:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 60:
                  if ((0x100000001000L & l) != 0L && kind > 2)
                     kind = 2;
                  break;
               case 61:
               case 98:
               case 126:
               case 149:
               case 201:
               case 296:
               case 686:
                  if ((0x200000002L & l) != 0L)
                     { jjCheckNAdd(60); }
                  break;
               case 62:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 63:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 64:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 66:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 67:
                  if ((0x10000000100000L & l) != 0L && kind > 2)
                     kind = 2;
                  break;
               case 68:
               case 352:
               case 507:
               case 826:
                  if ((0x800000008L & l) != 0L)
                     { jjCheckNAdd(67); }
                  break;
               case 69:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 70:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 71:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 72:
                  if ((0x100000001000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 73:
                  if ((0x4000000040L & l) != 0L)
                     { jjAddStates(178, 184); }
                  break;
               case 75:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 77:
                  if ((0x10000000100L & l) != 0L && kind > 2)
                     kind = 2;
                  break;
               case 78:
               case 130:
                  if ((0x800000008L & l) != 0L)
                     { jjCheckNAdd(77); }
                  break;
               case 79:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 80:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 81:
               case 115:
                  if ((0x8000000080000L & l) != 0L)
                     { jjCheckNAdd(67); }
                  break;
               case 82:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 81;
                  break;
               case 83:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 82;
                  break;
               case 86:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 87:
               case 228:
               case 335:
               case 613:
               case 655:
               case 755:
                  if ((0x800000008000L & l) != 0L)
                     { jjCheckNAdd(3); }
                  break;
               case 88:
                  if ((0x8000000080L & l) != 0L)
                     { jjCheckNAdd(45); }
                  break;
               case 89:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 90:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 91:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 92:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 94:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 95:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 96:
                  if ((0x8000000080L & l) != 0L)
                     { jjCheckNAddStates(173, 177); }
                  break;
               case 99:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 100:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 101:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 102:
                  if ((0x800000008000L & l) != 0L && kind > 2)
                     kind = 2;
                  break;
               case 103:
                  if ((0x10000000100000L & l) != 0L)
                     { jjCheckNAdd(102); }
                  break;
               case 104:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 105:
               case 520:
               case 563:
                  if ((0x400000004000L & l) != 0L)
                     { jjCheckNAdd(67); }
                  break;
               case 107:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 108:
                  if ((0x100000001000L & l) != 0L)
                     { jjAddStates(168, 172); }
                  break;
               case 109:
               case 264:
                  if ((0x8000000080L & l) != 0L)
                     { jjCheckNAdd(13); }
                  break;
               case 110:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 111:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 112:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 113:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 116:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 117:
                  if ((0x8000000080L & l) != 0L && kind > 2)
                     kind = 2;
                  break;
               case 118:
               case 548:
               case 628:
               case 767:
               case 886:
                  if ((0x400000004000L & l) != 0L)
                     { jjCheckNAdd(117); }
                  break;
               case 119:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 120:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 122:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 123:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(60); }
                  break;
               case 124:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 125:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 128:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 129:
                  if ((0x200000002000L & l) != 0L)
                     { jjAddStates(164, 167); }
                  break;
               case 136:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 137:
               case 311:
               case 848:
                  if ((0x100000001000L & l) != 0L)
                     { jjCheckNAdd(13); }
                  break;
               case 140:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 141:
               case 171:
               case 458:
               case 467:
               case 795:
                  if ((0x10000000100000L & l) != 0L)
                     { jjCheckNAdd(77); }
                  break;
               case 142:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 143:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 144:
                  if ((0x400000004000L & l) != 0L)
                     { jjCheckNAddStates(157, 163); }
                  break;
               case 145:
                  if ((0x8000000080000L & l) != 0L && kind > 2)
                     kind = 2;
                  break;
               case 146:
               case 231:
               case 624:
               case 812:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(145); }
                  break;
               case 150:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 151:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 153:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 154:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 156:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 157:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 158:
                  if ((0x100000001000000L & l) != 0L)
                     { jjCheckNAdd(67); }
                  break;
               case 159:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 160:
                  if ((0x4000000040L & l) != 0L && kind > 2)
                     kind = 2;
                  break;
               case 164:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 165:
               case 246:
                  if ((0x20000000200L & l) != 0L)
                     { jjCheckNAdd(34); }
                  break;
               case 166:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 167:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 168:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 169:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 170:
                  if ((0x800000008000L & l) != 0L)
                     { jjCheckNAddStates(150, 156); }
                  break;
               case 172:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 173:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 174:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 175:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 176:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 177:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 178:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 177;
                  break;
               case 179:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 182:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 183:
               case 858:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(45); }
                  break;
               case 184:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 186:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 187:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 188:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 189:
               case 669:
                  if ((0x20000000200000L & l) != 0L)
                     { jjCheckNAdd(67); }
                  break;
               case 192:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 193:
                  if ((0x1000000010000L & l) != 0L)
                     { jjCheckNAdd(145); }
                  break;
               case 194:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 195:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 196:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 197:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 198:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 199:
                  if ((0x1000000010000L & l) != 0L)
                     { jjAddStates(140, 149); }
                  break;
               case 202:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 203:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 204:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 205:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 207:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 208:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 207;
                  break;
               case 209:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 211:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 212:
               case 239:
               case 301:
                  if ((0x4000000040000L & l) != 0L)
                     { jjCheckNAdd(13); }
                  break;
               case 213:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 214:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 215:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 216:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 217:
               case 672:
               case 820:
                  if ((0x40000000400000L & l) != 0L)
                     { jjCheckNAdd(13); }
                  break;
               case 218:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 219:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 220:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 219;
                  break;
               case 221:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 222:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 223:
               case 851:
                  if ((0x4000000040000L & l) != 0L)
                     { jjCheckNAdd(7); }
                  break;
               case 224:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 225:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 226:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 227:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 229:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 230:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 232:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 233:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 234:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 235:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 234;
                  break;
               case 236:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 235;
                  break;
               case 237:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 238:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 240:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 241:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 242:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 243:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 244:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 245:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 247:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 246;
                  break;
               case 248:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 249:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 250:
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(135, 139); }
                  break;
               case 251:
               case 537:
               case 621:
                  if ((0x20000000200000L & l) != 0L)
                     { jjCheckNAdd(13); }
                  break;
               case 255:
                  if ((0x80000000800000L & l) != 0L)
                     { jjCheckNAdd(45); }
                  break;
               case 256:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 257:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 256;
                  break;
               case 258:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 259:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 261:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 263:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 266:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 267:
               case 272:
               case 407:
               case 451:
               case 603:
               case 731:
               case 774:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(3); }
                  break;
               case 268:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 269:
                  if ((0x80000000800000L & l) != 0L)
                     { jjAddStates(131, 134); }
                  break;
               case 273:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 272;
                  break;
               case 274:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 276:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 277:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 276;
                  break;
               case 278:
                  if ((0x80000000800L & l) != 0L && kind > 2)
                     kind = 2;
                  break;
               case 279:
                  if ((0x4000000040000L & l) != 0L)
                     { jjCheckNAdd(278); }
                  break;
               case 280:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 282:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 283:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 282;
                  break;
               case 284:
                  if ((0x1000000010L & l) != 0L)
                     { jjAddStates(114, 130); }
                  break;
               case 287:
                  if ((0x200000002L & l) != 0L)
                     { jjCheckNAdd(7); }
                  break;
               case 289:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 288;
                  break;
               case 290:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 289;
                  break;
               case 291:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 290;
                  break;
               case 292:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 293:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 292;
                  break;
               case 295:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 297:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 298:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 299:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 298;
                  break;
               case 300:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 299;
                  break;
               case 302:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 301;
                  break;
               case 303:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 302;
                  break;
               case 304:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 303;
                  break;
               case 305:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 306:
                  if ((0x100000001000L & l) != 0L)
                     { jjCheckNAdd(67); }
                  break;
               case 307:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 306;
                  break;
               case 308:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 307;
                  break;
               case 309:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 310:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 309;
                  break;
               case 312:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 311;
                  break;
               case 313:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 312;
                  break;
               case 314:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 313;
                  break;
               case 315:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 314;
                  break;
               case 316:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 315;
                  break;
               case 317:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 318:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 317;
                  break;
               case 319:
               case 438:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(32); }
                  break;
               case 320:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 319;
                  break;
               case 321:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 320;
                  break;
               case 322:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 321;
                  break;
               case 323:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 322;
                  break;
               case 324:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 323;
                  break;
               case 326:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 327:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 328:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 327;
                  break;
               case 329:
                  if ((0x400000004L & l) != 0L)
                     { jjCheckNAdd(13); }
                  break;
               case 330:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 329;
                  break;
               case 333:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 332;
                  break;
               case 334:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 333;
                  break;
               case 336:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 337:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 336;
                  break;
               case 338:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 337;
                  break;
               case 339:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 338;
                  break;
               case 340:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 339;
                  break;
               case 341:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 340;
                  break;
               case 342:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 343:
                  if ((0x800000008L & l) != 0L)
                     { jjCheckNAdd(145); }
                  break;
               case 344:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 343;
                  break;
               case 345:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 344;
                  break;
               case 346:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 345;
                  break;
               case 347:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 346;
                  break;
               case 348:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 347;
                  break;
               case 349:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 348;
                  break;
               case 351:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 353:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 352;
                  break;
               case 354:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 353;
                  break;
               case 355:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 354;
                  break;
               case 356:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 355;
                  break;
               case 358:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 357;
                  break;
               case 359:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 358;
                  break;
               case 360:
               case 791:
                  if ((0x20000000200L & l) != 0L)
                     { jjCheckNAdd(45); }
                  break;
               case 361:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 360;
                  break;
               case 362:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 361;
                  break;
               case 363:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 362;
                  break;
               case 364:
                  if ((0x1000000010000L & l) != 0L && kind > 2)
                     kind = 2;
                  break;
               case 365:
                  if ((0x800000008000L & l) != 0L)
                     { jjCheckNAdd(364); }
                  break;
               case 366:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 365;
                  break;
               case 367:
                  if ((0x10000000100000L & l) != 0L && kind > 23)
                     kind = 23;
                  break;
               case 368:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 369:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 371:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 370;
                  break;
               case 372:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 371;
                  break;
               case 373:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 372;
                  break;
               case 374:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 375;
                  break;
               case 376:
                  if ((0x400000004000L & l) != 0L && kind > 75)
                     kind = 75;
                  break;
               case 377:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 376;
                  break;
               case 378:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 377;
                  break;
               case 379:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 378;
                  break;
               case 380:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 379;
                  break;
               case 381:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 380;
                  break;
               case 382:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 381;
                  break;
               case 383:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 382;
                  break;
               case 384:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 383;
                  break;
               case 385:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 374;
                  break;
               case 386:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 385;
                  break;
               case 387:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 386;
                  break;
               case 388:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 387;
                  break;
               case 389:
                  if ((0x200000002L & l) != 0L)
                     { jjCheckNAddStates(103, 113); }
                  break;
               case 391:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 390;
                  break;
               case 392:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 391;
                  break;
               case 397:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 396;
                  break;
               case 399:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 398;
                  break;
               case 400:
                  if ((0x1000000010L & l) != 0L)
                     { jjCheckNAdd(32); }
                  break;
               case 402:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 401;
                  break;
               case 403:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 402;
                  break;
               case 404:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 403;
                  break;
               case 405:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 404;
                  break;
               case 406:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 405;
                  break;
               case 408:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 407;
                  break;
               case 409:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 408;
                  break;
               case 410:
                  if ((0x400000004000L & l) != 0L)
                     { jjCheckNAdd(7); }
                  break;
               case 411:
                  if ((0x4000000040000L & l) != 0L)
                     { jjCheckNAdd(13); }
                  break;
               case 413:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 412;
                  break;
               case 414:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 413;
                  break;
               case 415:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 414;
                  break;
               case 416:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 415;
                  break;
               case 418:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 417;
                  break;
               case 420:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 419;
                  break;
               case 421:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 420;
                  break;
               case 422:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 421;
                  break;
               case 423:
                  if ((0x400000004000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 422;
                  break;
               case 424:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 423;
                  break;
               case 425:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 424;
                  break;
               case 426:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 425;
                  break;
               case 427:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 426;
                  break;
               case 428:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 427;
                  break;
               case 429:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 428;
                  break;
               case 430:
                  if ((0x100000001000L & l) != 0L && kind > 23)
                     kind = 23;
                  break;
               case 431:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 430;
                  break;
               case 432:
                  if ((0x800000008L & l) != 0L)
                     { jjAddStates(75, 102); }
                  break;
               case 433:
               case 750:
                  if ((0x1000000010L & l) != 0L)
                     { jjCheckNAdd(13); }
                  break;
               case 434:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 433;
                  break;
               case 439:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 438;
                  break;
               case 440:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 439;
                  break;
               case 441:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 440;
                  break;
               case 442:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 441;
                  break;
               case 443:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 442;
                  break;
               case 444:
                  if ((0x8000000080000L & l) != 0L)
                     { jjCheckNAdd(13); }
                  break;
               case 445:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 444;
                  break;
               case 446:
                  if ((0x800000008000L & l) != 0L)
                     { jjCheckNAdd(117); }
                  break;
               case 447:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 446;
                  break;
               case 448:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 447;
                  break;
               case 449:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 448;
                  break;
               case 450:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 449;
                  break;
               case 452:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 451;
                  break;
               case 453:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 452;
                  break;
               case 454:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 453;
                  break;
               case 455:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 454;
                  break;
               case 456:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 455;
                  break;
               case 457:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 456;
                  break;
               case 459:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 458;
                  break;
               case 460:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 459;
                  break;
               case 461:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 460;
                  break;
               case 462:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 461;
                  break;
               case 463:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 462;
                  break;
               case 464:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 463;
                  break;
               case 465:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 464;
                  break;
               case 466:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 465;
                  break;
               case 468:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 467;
                  break;
               case 469:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 468;
                  break;
               case 470:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 469;
                  break;
               case 471:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 470;
                  break;
               case 472:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 471;
                  break;
               case 473:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 472;
                  break;
               case 474:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 473;
                  break;
               case 475:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 474;
                  break;
               case 476:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 475;
                  break;
               case 477:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 476;
                  break;
               case 478:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 477;
                  break;
               case 479:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 478;
                  break;
               case 480:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 479;
                  break;
               case 481:
               case 836:
                  if ((0x800000008L & l) != 0L)
                     { jjCheckNAdd(278); }
                  break;
               case 482:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 481;
                  break;
               case 483:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 482;
                  break;
               case 485:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 484;
                  break;
               case 486:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 485;
                  break;
               case 488:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 487;
                  break;
               case 489:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 488;
                  break;
               case 491:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 490;
                  break;
               case 493:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 492;
                  break;
               case 494:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 493;
                  break;
               case 495:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 494;
                  break;
               case 496:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 495;
                  break;
               case 497:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 496;
                  break;
               case 498:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 497;
                  break;
               case 499:
                  if ((0x200000002000L & l) != 0L)
                     { jjCheckNAdd(45); }
                  break;
               case 500:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 499;
                  break;
               case 501:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 500;
                  break;
               case 502:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 501;
                  break;
               case 503:
                  if ((0x20000000200L & l) != 0L)
                     { jjCheckNAdd(67); }
                  break;
               case 504:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 503;
                  break;
               case 505:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 504;
                  break;
               case 506:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 505;
                  break;
               case 508:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 507;
                  break;
               case 510:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 509;
                  break;
               case 511:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 510;
                  break;
               case 513:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 512;
                  break;
               case 514:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 513;
                  break;
               case 515:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 514;
                  break;
               case 516:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 515;
                  break;
               case 517:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 516;
                  break;
               case 518:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 517;
                  break;
               case 519:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 518;
                  break;
               case 521:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 520;
                  break;
               case 522:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 521;
                  break;
               case 523:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 522;
                  break;
               case 524:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 523;
                  break;
               case 525:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 524;
                  break;
               case 526:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 525;
                  break;
               case 527:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 526;
                  break;
               case 528:
                  if ((0x10000000100000L & l) != 0L)
                     { jjCheckNAdd(145); }
                  break;
               case 529:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 528;
                  break;
               case 530:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 529;
                  break;
               case 531:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 530;
                  break;
               case 532:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 531;
                  break;
               case 533:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 532;
                  break;
               case 534:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 533;
                  break;
               case 535:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 534;
                  break;
               case 536:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 535;
                  break;
               case 538:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 537;
                  break;
               case 540:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 539;
                  break;
               case 541:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 540;
                  break;
               case 542:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 541;
                  break;
               case 543:
               case 681:
                  if ((0x4000000040000L & l) != 0L)
                     { jjCheckNAdd(67); }
                  break;
               case 544:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 543;
                  break;
               case 545:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 544;
                  break;
               case 546:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 545;
                  break;
               case 547:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 546;
                  break;
               case 549:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 548;
                  break;
               case 550:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 549;
                  break;
               case 551:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 550;
                  break;
               case 552:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 551;
                  break;
               case 553:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 552;
                  break;
               case 554:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 553;
                  break;
               case 555:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 554;
                  break;
               case 556:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 555;
                  break;
               case 557:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 556;
                  break;
               case 558:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 557;
                  break;
               case 560:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 559;
                  break;
               case 561:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 560;
                  break;
               case 562:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 561;
                  break;
               case 564:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 563;
                  break;
               case 565:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 564;
                  break;
               case 566:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 565;
                  break;
               case 567:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 566;
                  break;
               case 569:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 568;
                  break;
               case 570:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 569;
                  break;
               case 571:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 570;
                  break;
               case 572:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 571;
                  break;
               case 573:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 572;
                  break;
               case 574:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 573;
                  break;
               case 575:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 574;
                  break;
               case 576:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 575;
                  break;
               case 577:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 576;
                  break;
               case 578:
               case 744:
               case 860:
                  if ((0x200000002000L & l) != 0L)
                     { jjCheckNAdd(13); }
                  break;
               case 579:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 578;
                  break;
               case 580:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 579;
                  break;
               case 581:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 580;
                  break;
               case 582:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 581;
                  break;
               case 583:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 582;
                  break;
               case 584:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 583;
                  break;
               case 585:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 584;
                  break;
               case 586:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 585;
                  break;
               case 587:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 586;
                  break;
               case 588:
                  if ((0x200000002000L & l) != 0L)
                     { jjCheckNAdd(364); }
                  break;
               case 589:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 588;
                  break;
               case 590:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 589;
                  break;
               case 591:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 590;
                  break;
               case 592:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 591;
                  break;
               case 593:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 592;
                  break;
               case 594:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 593;
                  break;
               case 595:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 594;
                  break;
               case 596:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 595;
                  break;
               case 597:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 596;
                  break;
               case 598:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 597;
                  break;
               case 599:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 598;
                  break;
               case 600:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 599;
                  break;
               case 601:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 600;
                  break;
               case 602:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 601;
                  break;
               case 604:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 603;
                  break;
               case 605:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 604;
                  break;
               case 606:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 605;
                  break;
               case 607:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 606;
                  break;
               case 608:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 607;
                  break;
               case 609:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 608;
                  break;
               case 610:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 609;
                  break;
               case 611:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 610;
                  break;
               case 612:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 611;
                  break;
               case 614:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 613;
                  break;
               case 615:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 614;
                  break;
               case 616:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 615;
                  break;
               case 617:
                  if ((0x4000000040000L & l) != 0L && kind > 74)
                     kind = 74;
                  break;
               case 618:
               case 636:
                  if ((0x200000002L & l) != 0L)
                     { jjCheckNAdd(617); }
                  break;
               case 619:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 618;
                  break;
               case 620:
                  if ((0x40000000400000L & l) != 0L)
                     { jjAddStates(70, 74); }
                  break;
               case 622:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 621;
                  break;
               case 623:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 622;
                  break;
               case 625:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 624;
                  break;
               case 626:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 625;
                  break;
               case 627:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 626;
                  break;
               case 629:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 628;
                  break;
               case 630:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 629;
                  break;
               case 631:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 630;
                  break;
               case 632:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 631;
                  break;
               case 633:
                  if ((0x80000000800000L & l) != 0L && kind > 2)
                     kind = 2;
                  break;
               case 634:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 633;
                  break;
               case 635:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 634;
                  break;
               case 637:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 636;
                  break;
               case 638:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 637;
                  break;
               case 639:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 638;
                  break;
               case 640:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 639;
                  break;
               case 641:
                  if ((0x20000000200L & l) != 0L)
                     { jjAddStates(58, 69); }
                  break;
               case 642:
                  if ((0x10000000100000L & l) != 0L)
                     { jjCheckNAdd(7); }
                  break;
               case 643:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 642;
                  break;
               case 644:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 643;
                  break;
               case 645:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 644;
                  break;
               case 646:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 645;
                  break;
               case 649:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 648;
                  break;
               case 650:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 649;
                  break;
               case 651:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 650;
                  break;
               case 652:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 651;
                  break;
               case 653:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 652;
                  break;
               case 654:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 653;
                  break;
               case 656:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 655;
                  break;
               case 657:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 656;
                  break;
               case 658:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 657;
                  break;
               case 659:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 658;
                  break;
               case 661:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 660;
                  break;
               case 662:
                  if ((0x100000001000L & l) != 0L)
                     { jjCheckNAdd(7); }
                  break;
               case 663:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 662;
                  break;
               case 664:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 663;
                  break;
               case 665:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 664;
                  break;
               case 666:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 665;
                  break;
               case 667:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 666;
                  break;
               case 668:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 667;
                  break;
               case 670:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 669;
                  break;
               case 671:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 670;
                  break;
               case 673:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 672;
                  break;
               case 674:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 673;
                  break;
               case 675:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 674;
                  break;
               case 676:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 675;
                  break;
               case 677:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 676;
                  break;
               case 678:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 677;
                  break;
               case 679:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 678;
                  break;
               case 680:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 679;
                  break;
               case 682:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 681;
                  break;
               case 683:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 682;
                  break;
               case 684:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 683;
                  break;
               case 685:
                  if ((0x400000004000L & l) != 0L)
                     { jjCheckNAdd(67); }
                  break;
               case 690:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 689;
                  break;
               case 691:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 690;
                  break;
               case 692:
                  if ((0x10000000100000L & l) != 0L)
                     { jjCheckNAdd(102); }
                  break;
               case 693:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 692;
                  break;
               case 695:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 694;
                  break;
               case 696:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 695;
                  break;
               case 697:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 696;
                  break;
               case 698:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 697;
                  break;
               case 700:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 699;
                  break;
               case 701:
                  if ((0x4000000040000L & l) != 0L && kind > 75)
                     kind = 75;
                  break;
               case 702:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 701;
                  break;
               case 703:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 702;
                  break;
               case 704:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 703;
                  break;
               case 705:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 704;
                  break;
               case 706:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 705;
                  break;
               case 707:
                  if ((0x8000000080000L & l) != 0L)
                     { jjAddStates(41, 57); }
                  break;
               case 708:
                  if ((0x200000002L & l) != 0L && kind > 2)
                     kind = 2;
                  break;
               case 709:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 708;
                  break;
               case 710:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 709;
                  break;
               case 711:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 710;
                  break;
               case 713:
                  if ((0x100000001000L & l) != 0L)
                     { jjCheckNAdd(60); }
                  break;
               case 714:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 713;
                  break;
               case 715:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 714;
                  break;
               case 716:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 715;
                  break;
               case 718:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 717;
                  break;
               case 720:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 719;
                  break;
               case 722:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 721;
                  break;
               case 723:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 722;
                  break;
               case 724:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 723;
                  break;
               case 725:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 724;
                  break;
               case 727:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 726;
                  break;
               case 728:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 727;
                  break;
               case 729:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 728;
                  break;
               case 730:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 729;
                  break;
               case 732:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 731;
                  break;
               case 733:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 732;
                  break;
               case 734:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 733;
                  break;
               case 735:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 734;
                  break;
               case 736:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 735;
                  break;
               case 737:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 736;
                  break;
               case 738:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 737;
                  break;
               case 739:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 738;
                  break;
               case 740:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 739;
                  break;
               case 741:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(67); }
                  break;
               case 743:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 742;
                  break;
               case 745:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 744;
                  break;
               case 746:
                  if ((0x800000008L & l) != 0L)
                     { jjCheckNAdd(13); }
                  break;
               case 747:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 746;
                  break;
               case 748:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 747;
                  break;
               case 749:
                  if ((0x2000000020000L & l) != 0L)
                     { jjCheckNAdd(60); }
                  break;
               case 751:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 750;
                  break;
               case 752:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 751;
                  break;
               case 754:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 753;
                  break;
               case 756:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 755;
                  break;
               case 757:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 756;
                  break;
               case 758:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 757;
                  break;
               case 759:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 758;
                  break;
               case 760:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 759;
                  break;
               case 762:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 761;
                  break;
               case 763:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 762;
                  break;
               case 764:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 763;
                  break;
               case 765:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 764;
                  break;
               case 766:
                  if ((0x2000000020000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 765;
                  break;
               case 768:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 767;
                  break;
               case 769:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 768;
                  break;
               case 770:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 769;
                  break;
               case 771:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 770;
                  break;
               case 773:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 772;
                  break;
               case 775:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 774;
                  break;
               case 776:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 775;
                  break;
               case 777:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 776;
                  break;
               case 778:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 777;
                  break;
               case 779:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 778;
                  break;
               case 780:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 779;
                  break;
               case 781:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 780;
                  break;
               case 782:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 781;
                  break;
               case 783:
                  if ((0x10000000100000L & l) != 0L && kind > 75)
                     kind = 75;
                  break;
               case 784:
               case 805:
                  if ((0x400000004000L & l) != 0L)
                     { jjCheckNAdd(783); }
                  break;
               case 785:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 784;
                  break;
               case 786:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 785;
                  break;
               case 787:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 786;
                  break;
               case 788:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 787;
                  break;
               case 789:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 788;
                  break;
               case 790:
                  if ((0x400000004L & l) != 0L)
                     { jjAddStates(36, 40); }
                  break;
               case 794:
                  if ((0x20000000200L & l) != 0L)
                     { jjCheckNAdd(67); }
                  break;
               case 796:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 795;
                  break;
               case 797:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 796;
                  break;
               case 798:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 797;
                  break;
               case 799:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 798;
                  break;
               case 800:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 799;
                  break;
               case 801:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 800;
                  break;
               case 802:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 801;
                  break;
               case 804:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 803;
                  break;
               case 806:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 805;
                  break;
               case 807:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 806;
                  break;
               case 808:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 807;
                  break;
               case 809:
                  if ((0x4000000040000L & l) != 0L)
                     { jjAddStates(28, 35); }
                  break;
               case 813:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 812;
                  break;
               case 814:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 813;
                  break;
               case 815:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 814;
                  break;
               case 816:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 815;
                  break;
               case 817:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 816;
                  break;
               case 818:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 817;
                  break;
               case 819:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 818;
                  break;
               case 821:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 820;
                  break;
               case 822:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 821;
                  break;
               case 823:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 822;
                  break;
               case 824:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 823;
                  break;
               case 825:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 824;
                  break;
               case 827:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 826;
                  break;
               case 828:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 827;
                  break;
               case 829:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 828;
                  break;
               case 830:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 829;
                  break;
               case 831:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 830;
                  break;
               case 832:
                  if ((0x80000000800L & l) != 0L)
                     { jjCheckNAdd(13); }
                  break;
               case 833:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 832;
                  break;
               case 834:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 833;
                  break;
               case 835:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 834;
                  break;
               case 837:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 836;
                  break;
               case 838:
                  if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 837;
                  break;
               case 839:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 838;
                  break;
               case 841:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 840;
                  break;
               case 842:
                  if ((0x80000000800000L & l) != 0L)
                     { jjCheckNAdd(145); }
                  break;
               case 843:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 842;
                  break;
               case 844:
                  if ((0x100000001000L & l) != 0L && kind > 75)
                     kind = 75;
                  break;
               case 845:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 844;
                  break;
               case 846:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 845;
                  break;
               case 847:
                  if ((0x10000000100000L & l) != 0L)
                     { jjCheckNAddStates(14, 27); }
                  break;
               case 852:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 851;
                  break;
               case 853:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 852;
                  break;
               case 854:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 853;
                  break;
               case 855:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 854;
                  break;
               case 856:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 855;
                  break;
               case 857:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 856;
                  break;
               case 859:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 858;
                  break;
               case 861:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 860;
                  break;
               case 863:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 862;
                  break;
               case 864:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 863;
                  break;
               case 865:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 864;
                  break;
               case 866:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 865;
                  break;
               case 867:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 866;
                  break;
               case 868:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 867;
                  break;
               case 869:
                  if ((0x400000004000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 868;
                  break;
               case 870:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 869;
                  break;
               case 871:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 870;
                  break;
               case 872:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 871;
                  break;
               case 874:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 873;
                  break;
               case 875:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 874;
                  break;
               case 876:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 875;
                  break;
               case 877:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 876;
                  break;
               case 878:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 877;
                  break;
               case 879:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 878;
                  break;
               case 880:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 879;
                  break;
               case 881:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 880;
                  break;
               case 882:
                  if ((0x400000004000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 881;
                  break;
               case 883:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 882;
                  break;
               case 884:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 883;
                  break;
               case 885:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 884;
                  break;
               case 887:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 886;
                  break;
               case 888:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 887;
                  break;
               case 889:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 888;
                  break;
               case 891:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 890;
                  break;
               case 893:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 892;
                  break;
               case 894:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 893;
                  break;
               case 895:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 894;
                  break;
               case 896:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 895;
                  break;
               case 897:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 896;
                  break;
               case 898:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 897;
                  break;
               case 899:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 898;
                  break;
               case 900:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 899;
                  break;
               case 902:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 901;
                  break;
               case 903:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 902;
                  break;
               case 904:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 903;
                  break;
               case 905:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 904;
                  break;
               case 906:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 905;
                  break;
               case 907:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 906;
                  break;
               case 909:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 908;
                  break;
               case 910:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 909;
                  break;
               case 911:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 910;
                  break;
               case 912:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 911;
                  break;
               case 913:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 912;
                  break;
               case 914:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 913;
                  break;
               case 915:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 914;
                  break;
               case 916:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 915;
                  break;
               case 917:
                  if ((0x200000002000L & l) != 0L && kind > 2)
                     kind = 2;
                  break;
               case 918:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 917;
                  break;
               case 919:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 918;
                  break;
               case 920:
                  if ((0x20000000200000L & l) != 0L)
                     { jjCheckNAdd(13); }
                  break;
               case 921:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 920;
                  break;
               case 922:
                  if ((0x1000000010000L & l) != 0L && kind > 75)
                     kind = 75;
                  break;
               case 923:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 922;
                  break;
               case 924:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 923;
                  break;
               case 925:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 924;
                  break;
               case 926:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 925;
                  break;
               case 927:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 926;
                  break;
               case 928:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 927;
                  break;
               case 929:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 928;
                  break;
               case 932:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(194, 195); }
                  break;
               case 946:
               case 947:
                  if ((0x2fffffffafffffffL & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  { jjCheckNAdd(947); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 23:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 103)
                     kind = 103;
                  { jjAddStates(9, 11); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 948 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_1(int pos, long active0, long active1){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_1(int pos, long active0, long active1){
   return jjMoveNfa_1(jjStopStringLiteralDfa_1(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_1(){
   switch(curChar)
   {
      case 39:
         return jjStartNfaWithStates_1(0, 106, 1);
      default :
         return jjMoveNfa_1(0, 0);
   }
}
private int jjStartNfaWithStates_1(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_1(state, pos + 1);
}
private int jjMoveNfa_1(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 3;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xffffff7fffffffffL & l) != 0L)
                  {
                     if (kind > 105)
                        kind = 105;
                  }
                  else if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 1:
                  if (curChar == 39 && kind > 105)
                     kind = 105;
                  break;
               case 2:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  kind = 105;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((jjbitVec0[i2] & l2) != 0L && kind > 105)
                     kind = 105;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 3 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, "\50", "\51", "\56", "\54", "\73", "\174\174", null, null, 
null, "\53", "\55", "\52", "\57", "\75", null, "\74", "\74\75", "\76", "\76\75", 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}
static final int[] jjnextStates = {
   937, 938, 939, 932, 941, 942, 944, 945, 946, 23, 24, 26, 375, 384, 850, 857, 
   859, 861, 872, 885, 102, 891, 900, 907, 916, 919, 921, 929, 811, 819, 825, 831, 
   835, 841, 843, 846, 793, 794, 802, 804, 808, 712, 716, 720, 725, 730, 740, 741, 
   743, 745, 748, 749, 754, 760, 766, 773, 782, 789, 647, 654, 661, 668, 671, 680, 
   684, 685, 691, 693, 700, 706, 623, 627, 632, 635, 640, 437, 443, 445, 450, 457, 
   466, 480, 483, 486, 491, 498, 502, 506, 511, 519, 527, 536, 542, 547, 558, 562, 
   567, 577, 587, 602, 612, 616, 619, 395, 399, 400, 406, 409, 410, 411, 418, 67, 
   429, 431, 286, 287, 295, 300, 305, 310, 318, 324, 328, 334, 342, 351, 359, 363, 
   366, 373, 388, 271, 277, 280, 283, 254, 259, 263, 266, 268, 200, 205, 211, 216, 
   222, 227, 230, 238, 245, 249, 180, 160, 182, 184, 188, 192, 198, 148, 154, 157, 
   159, 102, 164, 169, 132, 136, 140, 143, 114, 116, 122, 125, 128, 97, 101, 102, 
   104, 107, 76, 80, 83, 86, 87, 92, 95, 31, 33, 40, 44, 52, 54, 59, 
   66, 72, 933, 934, 
};

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(Exception e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      CommonTokenAction(matchedToken);
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         break;
       case 2:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_2();
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           CommonTokenAction(matchedToken);
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
        jjimageLen += jjmatchedPos + 1;
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void MoreLexicalActions()
{
   jjimageLen += (lengthOfMatch = jjmatchedPos + 1);
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 2 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
          matchedToken.sqlReserved = true;
         break;
      case 22 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                             matchedToken.adqlReserved = true;
         break;
      case 23 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                             matchedToken.adqlReserved = true;
         break;
      case 24 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                             matchedToken.adqlReserved = true;
         break;
      case 25 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.adqlReserved = true;
         break;
      case 26 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.adqlReserved = true;
         break;
      case 27 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.adqlReserved = true;
         break;
      case 28 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.adqlReserved = true;
         break;
      case 29 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.adqlReserved = true;
         break;
      case 30 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.adqlReserved = true;
         break;
      case 31 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.adqlReserved = true;
         break;
      case 32 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.adqlReserved = true;
         break;
      case 33 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.adqlReserved = true;
         break;
      case 34 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.adqlReserved = true;
         break;
      case 35 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                             matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 36 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.adqlReserved = true;
         break;
      case 37 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.adqlReserved = true;
         break;
      case 38 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.adqlReserved = true;
         break;
      case 39 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.adqlReserved = true;
         break;
      case 40 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.adqlReserved = true;
         break;
      case 41 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.adqlReserved = true;
         break;
      case 42 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.adqlReserved = true;
         break;
      case 43 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.adqlReserved = true;
         break;
      case 44 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.adqlReserved = true;
         break;
      case 45 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                               matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 46 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                               matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 47 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                               matchedToken.adqlReserved = true;
         break;
      case 48 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                               matchedToken.adqlReserved = true;
         break;
      case 49 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                               matchedToken.adqlReserved = true;
         break;
      case 50 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                               matchedToken.adqlReserved = true;
         break;
      case 51 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                               matchedToken.adqlReserved = true;
         break;
      case 52 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                               matchedToken.adqlReserved = true;
         break;
      case 53 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                               matchedToken.adqlReserved = true;
         break;
      case 54 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                           matchedToken.adqlReserved = true;
         break;
      case 55 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                             matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 56 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                             matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 57 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                             matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 58 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                             matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 59 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                             matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 60 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                       matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 61 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                       matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 62 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                       matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 63 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                       matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 64 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                       matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 65 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                       matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 66 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                       matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 67 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                       matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 68 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                       matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 69 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                       matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 70 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                       matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 71 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                       matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 72 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                       matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 73 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                     matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 74 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                          matchedToken.adqlReserved = true;
         break;
      case 75 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                          matchedToken.adqlReserved = true;
         break;
      case 76 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                             matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 77 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                             matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 78 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                   matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 79 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                   matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 80 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                   matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 81 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                   matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 82 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                   matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 83 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                   matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 84 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                   matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 85 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                   matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 86 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                   matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 87 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                   matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 88 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                   matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 89 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                   matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 90 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                   matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 91 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                   matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 92 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                   matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 93 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                             matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 94 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                             matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 95 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                             matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 96 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                             matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 97 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                             matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 98 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                             matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 99 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                             matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 100 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                             matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      case 101 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                   matchedToken.adqlReserved = matchedToken.isFunctionName = true;
         break;
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public ADQLGrammar201TokenManager(SimpleCharStream stream){

      if (SimpleCharStream.staticFlag)
            throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");

    input_stream = stream;
  }

  /** Constructor. */
  public ADQLGrammar201TokenManager (SimpleCharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  
  public void ReInit(SimpleCharStream stream)
  {


    jjmatchedPos =
    jjnewStateCnt =
    0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 948; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream, int lexState)
  
  {
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 3 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }


/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "WithinString",
   "WithinDelimitedId",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, 1, -1, 0, -1, -1, -1, -1, 2, -1, 0, -1, -1, 
};
static final long[] jjtoToken = {
   0xfffffffffffffffdL, 0x63c7fffffffffL, 
};
static final long[] jjtoSkip = {
   0x2L, 0x8000000000L, 
};
static final long[] jjtoSpecial = {
   0x0L, 0x0L, 
};
static final long[] jjtoMore = {
   0x0L, 0x1830000000000L, 
};
    protected SimpleCharStream  input_stream;

    private final int[] jjrounds = new int[948];
    private final int[] jjstateSet = new int[2 * 948];
    private final StringBuilder jjimage = new StringBuilder();
    private StringBuilder image = jjimage;
    private int jjimageLen;
    private int lengthOfMatch;
    protected int curChar;
}
